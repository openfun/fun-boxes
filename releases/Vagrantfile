Vagrant.require_version ">= 1.5.3"
unless Vagrant.has_plugin?("vagrant-vbguest")
  raise "Please install the vagrant-vbguest plugin by running `vagrant plugin install vagrant-vbguest`"
end

VAGRANTFILE_API_VERSION = "2"

VM_MEMORY = (ENV["VM_MEMORY"] or "1024")
VM_CPU_COUNT = (ENV["VM_CPU_COUNT"] or "2")

latest_fun_release = "3.3"
latest_openedx_fun_release = "3.3"
fun_release = (ENV["FUN_RELEASE"] or latest_fun_release)
openedx_fun_release = "fun/release-#{ENV["OPENEDX_FUN_RELEASE"] or latest_openedx_fun_release}"
if ENV["VAGRANT_BOXES"]
    box_url = "file://#{ENV["VAGRANT_BOXES"]}/openfun-#{fun_release}.box"
else
    box_url = "http://files.alt.openfun.fr/vagrant-images/fun/openfun-#{fun_release}.box"
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box     = "openfun-#{fun_release}"
  config.vm.box_url = box_url

  # Assign a fixed IP
  if ENV["VAGRANT_NETWORK_DHCP"]
    config.vm.network :private_network, type: "dhcp"
  else
    config.vm.network :private_network, ip: (ENV["VAGRANT_NETWORK_IP"] or "10.1.100.101")
  end

  unless ENV['VAGRANT_NO_PORT_FORWARDING']
      config.vm.network :forwarded_port, guest: 8000, host: 8000, auto_correct: true
      config.vm.network :forwarded_port, guest: 8001, host: 8001, auto_correct: true
      config.vm.network :forwarded_port, guest: 18080, host: 18080, auto_correct: true
      config.vm.network :forwarded_port, guest: 8765, host: 8765, auto_correct: true
      config.vm.network :forwarded_port, guest: 9200, host: 9200, auto_correct: true
  end
  config.ssh.insert_key = true
  config.ssh.private_key_path = "vagrant_private_key"

  config.vm.synced_folder  ".", "/vagrant", disabled: true

  # If this environment variable is defined, we mount the OpenEdx and OpenFUN
  # repositories from this folder to their corresponding locations in the VM
  if ENV['VAGRANT_MOUNT_BASE']
    # Sync folders with NFS or VBOXFS
    def sync_folder(src, dst, config)
      use_nfs = (ENV['VAGRANT_USE_VBOXFS'] != 'true')# use nfs by default
      full_src = ENV['VAGRANT_MOUNT_BASE'] + "/" + src
      if use_nfs
        config.vm.synced_folder full_src, dst, create: true, nfs: true
      else
        config.vm.synced_folder full_src, dst, create: true, owner: "edxapp", group: "www-data"
      end
    end
    sync_folder "edx-platform", "/edx/app/edxapp/edx-platform", config
    sync_folder "fun-apps", "/edx/app/edxapp/fun-apps", config
  end

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", VM_MEMORY]
    vb.customize ["modifyvm", :id, "--cpus", VM_CPU_COUNT]
    vb.name = "vagrant-openfun-release#{fun_release}"

    # Allow DNS to work for Ubuntu 12.10 host
    # http://askubuntu.com/questions/238040/how-do-i-fix-name-service-for-vagrant-client
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # Solve this issue: https://www.virtualbox.org/ticket/13002
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
  end

  # Use vagrant-vbguest plugin to make sure Guest Additions are in sync
  config.vbguest.auto_reboot = true
  config.vbguest.auto_update = true

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "upgrade.yml"
    ansible.extra_vars = {
      fun_release: fun_release,
      openedx_fun_release: openedx_fun_release,
      checkout_repos: (ENV["VAGRANT_MOUNT_BASE"] == nil),
    }
  end
end
